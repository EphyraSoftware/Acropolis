plugins {
    id("io.gitlab.arturbosch.detekt").version("1.0.0.RC9.2")
}

subprojects {
    repositories {
        jcenter()
        maven { url "https://repo.spring.io/milestone" }
    }

    apply plugin: 'java'
}

repositories {
    mavenCentral()
    jcenter()
}

apply plugin: 'jacoco'

jacoco {
    toolVersion = '0.8.2'
}

ext {
    detectSources = file("${projectDir}").listFiles(new FilenameFilter() {
        @Override
        boolean accept(File dir, String name) {
            new File(dir, name).isDirectory() && name.startsWith("acropolis-")
        }
    })
}

detekt {
    toolVersion = "1.0.0.RC9.2"

    input = layout.files(detectSources)
    config = layout.files("detekt-config.yml")
    reports {
        xml {
            destination = file("build/reports/failfast.xml")
        }
        html {
            destination = file("build/reports/failfast.html")
        }
    }
}

task codeCoverageReport(type: JacocoReport) {
    // These properties are available on projects with the java plugin, after they've been
    // evaluated. Ignore that IntelliJ doesn't think they'll exist because the will be there
    // for Kotlin sub-projects.
    //noinspection GroovyAssignabilityCheck
    additionalSourceDirs = files(subprojects.sourceSets.main.allSource.srcDirs)
    //noinspection GroovyAssignabilityCheck
    sourceDirectories = files(subprojects.sourceSets.main.allSource.srcDirs)
    //noinspection GroovyAssignabilityCheck
    classDirectories =  files(subprojects.sourceSets.main.output)
    executionData fileTree(project.rootDir.absolutePath).include("**/build/jacoco/*.exec")

    // Can use this if all sub-projects have a jacocoReport task configured.
    // executionData = files(subprojects.jacocoTestReport.executionData)
    // dependsOn subprojects.jacocoTestReport

    reports {
        xml.enabled = true
        xml.setDestination(new File("${buildDir}/reports/jacoco/report.xml"))
        html.enabled = true
        csv.enabled = false
    }
}
