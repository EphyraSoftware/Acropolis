buildscript {
    ext {
        kotlinVersion = "1.2.71"
        springBootVersion = "2.0.5.RELEASE"
    }
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'jacoco'

sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

sourceSets {
    intTest {
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

configurations {
    intTestImplementation.extendsFrom implementation
    intTestRuntimeOnly.extendsFrom runtimeOnly
}

task('integrationTest', type: Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.intTest.output.classesDirs
    classpath = sourceSets.intTest.runtimeClasspath
    shouldRunAfter test

    useJUnitPlatform()
}

// This allows the integrationTest task to run alone, or when this property is provided
// the integration tests are triggered by the build task via the check task.
if (project.hasProperty('runIntegrationTests')) {
    check.dependsOn integrationTest
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
        csv.enabled = false
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.9
            }
        }
    }
}

test {
    useJUnitPlatform()
}

dependencies {
    // The Kotlin standard library
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    // Spring beans dependency so that this library can interact with the Spring IOC container
    compile "org.springframework:spring-context:5.0.8.RELEASE"
    // Needed for spring to work with Kotlin
    compile "org.jetbrains.kotlin:kotlin-reflect"

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'

    compile project(":acropolis-persistence")
    compile project(":acropolis-external")

    // https://mvnrepository.com/artifact/io.kotlintest/kotlintest-runner-junit5
    testCompile "io.kotlintest:kotlintest-runner-junit5:3.1.9"

    // https://mvnrepository.com/artifact/io.mockk/mockk
    testCompile "io.mockk:mockk:1.8.7"

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
    intTestCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.0.5.RELEASE'

    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
    intTestCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.3.1'

    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-params
    intTestCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.3.1'

    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine
    intTestRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.3.1'

    // MySql connector for use with spring JPA
    intTestCompile group: 'mysql', name: 'mysql-connector-java', version: '8.0.12'

    // https://mvnrepository.com/artifact/com.google.guava/guava
    intTestCompile group: 'com.google.guava', name: 'guava', version: '26.0-jre'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
}
